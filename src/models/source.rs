/*
 * Mistral AI API
 *
 * Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Source {
    #[serde(rename = "upload")]
    Upload,
    #[serde(rename = "repository")]
    Repository,
    #[serde(rename = "mistral")]
    Mistral,

}

impl std::fmt::Display for Source {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Upload => write!(f, "upload"),
            Self::Repository => write!(f, "repository"),
            Self::Mistral => write!(f, "mistral"),
        }
    }
}

impl Default for Source {
    fn default() -> Source {
        Self::Upload
    }
}

