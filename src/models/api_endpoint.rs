/*
 * Mistral AI API
 *
 * Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ApiEndpoint {
    #[serde(rename = "/v1/chat/completions")]
    SlashV1SlashChatSlashCompletions,
    #[serde(rename = "/v1/embeddings")]
    SlashV1SlashEmbeddings,
    #[serde(rename = "/v1/fim/completions")]
    SlashV1SlashFimSlashCompletions,
    #[serde(rename = "/v1/moderations")]
    SlashV1SlashModerations,
    #[serde(rename = "/v1/chat/moderations")]
    SlashV1SlashChatSlashModerations,

}

impl std::fmt::Display for ApiEndpoint {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::SlashV1SlashChatSlashCompletions => write!(f, "/v1/chat/completions"),
            Self::SlashV1SlashEmbeddings => write!(f, "/v1/embeddings"),
            Self::SlashV1SlashFimSlashCompletions => write!(f, "/v1/fim/completions"),
            Self::SlashV1SlashModerations => write!(f, "/v1/moderations"),
            Self::SlashV1SlashChatSlashModerations => write!(f, "/v1/chat/moderations"),
        }
    }
}

impl Default for ApiEndpoint {
    fn default() -> ApiEndpoint {
        Self::SlashV1SlashChatSlashCompletions
    }
}

