/*
 * Mistral AI API
 *
 * Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct JobIn {
    #[serde(rename = "model")]
    pub model: models::FineTuneableModel,
    #[serde(rename = "training_files", skip_serializing_if = "Option::is_none")]
    pub training_files: Option<Vec<models::TrainingFile>>,
    #[serde(rename = "validation_files", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub validation_files: Option<Option<Vec<uuid::Uuid>>>,
    #[serde(rename = "hyperparameters")]
    pub hyperparameters: Box<models::TrainingParametersIn>,
    #[serde(rename = "suffix", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub suffix: Option<Option<String>>,
    #[serde(rename = "integrations", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub integrations: Option<Option<Vec<models::JobInIntegrationsInner>>>,
    #[serde(rename = "repositories", skip_serializing_if = "Option::is_none")]
    pub repositories: Option<Vec<models::JobInRepositoriesInner>>,
    /// This field will be required in a future release.
    #[serde(rename = "auto_start", skip_serializing_if = "Option::is_none")]
    pub auto_start: Option<bool>,
}

impl JobIn {
    pub fn new(model: models::FineTuneableModel, hyperparameters: models::TrainingParametersIn) -> JobIn {
        JobIn {
            model,
            training_files: None,
            validation_files: None,
            hyperparameters: Box::new(hyperparameters),
            suffix: None,
            integrations: None,
            repositories: None,
            auto_start: None,
        }
    }
}

