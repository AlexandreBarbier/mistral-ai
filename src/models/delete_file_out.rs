/*
 * Mistral AI API
 *
 * Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeleteFileOut {
    /// The ID of the deleted file.
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// The object type that was deleted
    #[serde(rename = "object")]
    pub object: String,
    /// The deletion status.
    #[serde(rename = "deleted")]
    pub deleted: bool,
}

impl DeleteFileOut {
    pub fn new(id: uuid::Uuid, object: String, deleted: bool) -> DeleteFileOut {
        DeleteFileOut {
            id,
            object,
            deleted,
        }
    }
}

