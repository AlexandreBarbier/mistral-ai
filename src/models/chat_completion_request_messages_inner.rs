/*
 * Mistral AI API
 *
 * Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(tag = "role")]
pub enum ChatCompletionRequestMessagesInner {
    #[serde(rename="system")]
    System(models::SystemMessage),
    #[serde(rename="user")]
    User(models::UserMessage),
    #[serde(rename="assistant")]
    Assistant(models::AssistantMessage),
    #[serde(rename="tool")]
    Tool(models::ToolMessage),
}

impl Default for ChatCompletionRequestMessagesInner {
    fn default() -> Self {
        Self::System(Default::default())
    }
}


