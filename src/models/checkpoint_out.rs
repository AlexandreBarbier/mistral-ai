/*
 * Mistral AI API
 *
 * Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CheckpointOut {
    #[serde(rename = "metrics")]
    pub metrics: Box<models::MetricOut>,
    /// The step number that the checkpoint was created at.
    #[serde(rename = "step_number")]
    pub step_number: i32,
    /// The UNIX timestamp (in seconds) for when the checkpoint was created.
    #[serde(rename = "created_at")]
    pub created_at: i32,
}

impl CheckpointOut {
    pub fn new(metrics: models::MetricOut, step_number: i32, created_at: i32) -> CheckpointOut {
        CheckpointOut {
            metrics: Box::new(metrics),
            step_number,
            created_at,
        }
    }
}

